<%
	if ( @attachment.title.blank? )
		title = @attachment.file_file_name
	else
		title = @attachment.title
	end
-%>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width,initial-scale=1"/>

    <link rel="stylesheet" type="text/css" href="/themes/v3/javascripts/org/openlibrary/BookReader.css"/>
    <link rel="stylesheet" type="text/css" href="/themes/v3/javascripts/org/openlibrary/BookReaderEuropeana.css"/>

	<%
		script_files = [
			'/themes/v3/javascripts/com/jquery/jquery-1.4.2.min.js',
			'/themes/v3/javascripts/org/openlibrary/dragscrollable.js',
			'/themes/v3/javascripts/com/jquery/plugins/jquery-ui-1.8.5.custom.min.js',
			'/themes/v3/javascripts/com/jquery/plugins/jquery.colorbox-min.js',
			'/themes/v3/javascripts/com/jquery/plugins/jquery.ui.ipad.js',
			'/themes/v3/javascripts/com/jquery/plugins/jquery.bt.min.js',
			'/themes/v3/javascripts/org/openlibrary/BookReader.js'
		]
	%>

	<%= javascript_include_tag script_files, :cache => '/cache/javascripts/' + asset_bundle_id(script_files) %>
	<style>
		html,
		body{
			width:  100%;
			height: 100%;
		}
	</style>

</head>

<body style="background-color:red;">

<style type="text/css">
	body #BRtoolbar,
	body #BRnav{
		display:none;
	}
</style>

	<div id="BookReader">
	    Internet Archive BookReader Demo
   		<br/>

    	<noscript>
    		<p>
    	    	The BookReader requires JavaScript to be enabled. Please check that your browser supports JavaScript and that it is enabled in the browser settings.  You can also try one of the <a href="http://www.archive.org/details/goodytwoshoes00newyiala"> other formats of the book</a>.
    		</p>
    	</noscript>
	</div>

<script type="text/javascript">
/*global BookReader, jQuery, console */
/*jslint bitwise: true, browser: true, plusplus: true, regexp: true, white: true */
(function( $ ) {

	'use strict';

<%
leaf_count = 0
bookImages = attachments.collect do |attachment|
	if attachment.image?
	leaf_count += 1
		'{' +
			'"height":' + (attachment.file.height ? attachment.file.height.to_s : '100') + ',' +
			'"url":"' + "#{attachment_url( attachment, 'large' )}" + '",' +
			'"width":' + (attachment.file.width ? attachment.file.width.to_s : '100') +
		'}'
	end
end
-%>
	var bookImages = [
		<% if leaf_count > 1 -%>
			<%= bookImages.join(',').html_safe -%>
		<% else -%>
			<%= bookImages.join('').html_safe -%>
		<% end -%>
	],
	br = new BookReader();

	/**
	 * @param {int} index
	 * @returns {int}
	 */
	br.getPageWidth = function( index ) {
		var result = 0;

		if ( !bookImages || !bookImages[index] ) {
			if ( console && console.warn ) {
				console.warn( 'br.getPageWidth(), bookImages or bookImages[index] not defined' );
			}
		} else {
			result = bookImages[index].width;
		}

		return result;
	};

	/**
	 * @param {int} index
	 * @returns {int}
	 */
	br.getPageHeight = function( index ) {
		var result = 0;

		if ( !bookImages || !bookImages[index] ) {
			if ( console && console.warn ) {
				console.warn( 'br.getPageHeight(), bookImages or bookImages[index] not defined' );
			}
		} else {
			result = bookImages[index].height;
		}

		return result;
	};

	/**
	 * We load the images from archive.org -- you can modify this function to retrieve images
	 * using a different URL structure
	 *
	 * @param {int} index
	 * @param {??} reduce
	 * @param {??} rotate
	 * @retuns {null|string}
	 */
	br.getPageURI = function( index, reduce, rotate ) {
		var result = null;

		if ( !bookImages || !bookImages[index] ) {
			if ( console && console.warn ) {
				console.warn( 'br.getPageURI(), bookImages or bookImages[index] not defined' );
			}
		} else {
			result = bookImages[index].url;
		}

		return result;
	};

	/**
	 * Return which side, left or right, that a given page should be displayed on
	 *
	 * @param {int} index
	 * @returns {string}
	 */
	br.getPageSide = function( index ) {
		var result = 'L';

		if ( 0 === ( index & 0x1 ) ) {
			result = 'R';
		}

		return result;
	};

	/**
	 * This function returns the left and right indices for the user-visible
	 * spread that contains the given index.  The return values may be
	 * null if there is no facing page or the index is invalid.
	 *
	 * @param {int} pindex
	 */
	br.getSpreadIndices = function( pindex ) {
		var spreadIndices = [null, null];

		if ( 'rl' === this.pageProgression ) {
			// Right to Left
			if ( this.getPageSide(pindex) === 'R' ) {
				spreadIndices[1] = pindex;
				spreadIndices[0] = pindex + 1;
			} else {
				// Given index was LHS
				spreadIndices[0] = pindex;
				spreadIndices[1] = pindex - 1;
			}
		} else {
			// Left to right
			if ( this.getPageSide(pindex) === 'L' ) {
				spreadIndices[0] = pindex;
				spreadIndices[1] = pindex + 1;
			} else {
				// Given index was RHS
				spreadIndices[1] = pindex;
				spreadIndices[0] = pindex - 1;
			}
		}

		return spreadIndices;
	};

	/**
	 * For a given "accessible page index" return the page number in the book.
	 *
	 * For example, index 5 might correspond to "Page 1" if there is front matter such
	 * as a title page and table of contents.
	 *
	 * @param {int} index
	 */
	br.getPageNum = function(index) {
		return index+1;
	};

	// Total number of leafs
	br.numLeafs = <%= leaf_count -%>;

	// Book title and the URL used for the book title link
	br.bookTitle= 'Open Library BookReader Presentation';
	br.bookUrl  = 'http://openlibrary.org';

	// Override the path used to find UI images
	br.imagesBaseURL = '../BookReader/images/';

	/**
	 * @param {} frameWidth
	 * @param {} frameHeight
	 * @param {} viewParams
	 */
	br.getEmbedCode = function(frameWidth, frameHeight, viewParams) {
		return "Embed code not supported in bookreader demo.";
	};

	// Let's go!
	br.init();

	// read-aloud and search need backend compenents and are not supported in the demo
	$('#BRtoolbar').find('.read').hide();
	$('#textSrch').hide();
	$('#btnSrch').hide();
}( jQuery ));
</script>
</body>
</html>
