<%
	# note, the <dt class="translate"> tags are purposefullt hard-coded to english
	# the idea is that the user will use the microsoft translate tool to
	# translate the <dt> content
-%>


<%
  # vals have:of fields - all must be present to show
  #    name (the key of the hash)
  #    label (translate key)
  #    source (read from proxy or aggregation)
  #    required (optional list )

  # portal search strings for test data:
  #    europeana_aggregation_edm_country:*
  #    proxy_dc_creator:*
  #    proxy_dc_date:*
  #    proxy_dc_type:*
  #    proxy_dcterms_extent:*
  #    europeana_aggregation_edm_language:*
  #    provider_aggregation_edm_provider:*
  #    provider_aggregation_edm_dataProvider:*
  # check here for others:
  # /home/andy/git/corelib/corelib-solr/src/test/resources/solr/search/conf/schema.xml


  edmVals = [
      {
        "name" => "dcDescription",
        "ns" => "dc",
        "label" => "description",
        "source" => proxy
      },
      {
      "name" => "edmLanguage",
        "ns" => "edm",
      "label" => "language",
      "source" => euAggregation,
      "href" => (controller.controller_name == 'europeana' ? (search_europeana_url + "?qf[]=LANGUAGE:") : nil),
      "href" => home_url + '/europeana/search?qf[]=LANGUAGE:',
      "expand" => 'languageLabel(readVal)'
      },
      {
      "name" => "dcCreator",
      "ns" => "dc",
      "label" => "creator",
      "source" => proxy
      },
      {
      "name" => "dcType",
      "ns" => "dc",
      "label" => "type",
      "source" => proxy
      },
      {
      "name" => "dcFormat",
      "ns" => "dc",
      "label" => "format",
      "source" => proxy
      },
      {
        "name" => "dcSubject",
        "ns" => "dc",
        "label" => "subject",
        "source" => proxy
      },
      {
      "name" => "dcDate",
        "ns" => "dc",
      "label" => "date",
      "source" => proxy
      },
      {
        "name" => "dcCoverage",
        "ns" => "dc",
        "label" => "coverage",
        "source" => proxy
      },
      {
        "name" => "edmRights",
        "ns" => "edm",
        "label" => "rights",
        "source" => aggregation,
        "target" => "_blank",
        "rights" => "true",
        "expand" => 'rightsLabel(readVal, true)'
      }
   ]

%>


  <%- edmVals.each do |edmVal| -%>

	<%- if readVal = edm_proxy_field(edmVal["source"], edmVal["name"]) -%>

	    <%- if edmVal["name2"] -%>
			<%- name2 = edm_proxy_field(edmVal["source"], edmVal["name2"]) -%>
	        <%- next if !name2 -%>
     	<% end -%>

	    <%- if edmVal["capitalise"] -%>
	      <%- readVal = readVal.split(' ').map {|w| w.capitalize }.join(' ') -%>
     	<% end -%>

	    <%- if edmVal["href"] ||  edmVal["name2"] ||  edmVal["rights"]  -%>
	      <%- if edmVal["name2"] -%>
		      <%- href = name2 -%>
	      <%- elsif edmVal["rights"] -%>
		      <%- href = readVal -%>
	      <%- else -%>
		      <%- href = edm_proxy_field(edmVal["source"], edmVal["name"]) -%>
		      <%- href = href.index(' ') ? href.clone.gsub!(' ', '+') : href -%>
		      <%- href = edmVal["href"] + href -%>
          <%- end -%>

	      <%- readVal = edmVal["expand"] ? eval(edmVal["expand"]) : readVal -%>
	      <%- readVal = ('<a href="' + href + '"' +  (edmVal["target"] ? ' target="' + edmVal["target"] + '"' : ' ')   + '>' + readVal + '</a>').html_safe -%>
     	<% end -%>

		<dt><b><%= t('formtastic.labels.content.metadata.' + edmVal["ns"] + '.' + edmVal["label"]) -%></b></dt>
		<dd>
			<%= readVal %>
		</dd>
	<% end -%>

  <%- end -%>
